plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/tokyo-client.accesswidener")
}

repositories {
    maven {
        name = "meteor-maven"
        url = "https://maven.meteordev.org/releases"
        content {
            includeGroup "meteordevelopment"
        }
    }
    maven {
        name = "meteor-maven-snapshots"
        url = "https://maven.meteordev.org/snapshots"
        content {
            includeGroup "meteordevelopment"
            includeGroup "baritone"
        }
    }
    maven {
        name = "msau-repsy"
        url = "https://repo.repsy.io/mvn/ggcrosby/meteorsharedaddonutils"
        content {
            includeGroup "io.github.racoondog"
        }
    }
}

dependencies {
    // Default
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "meteordevelopment:meteor-client:${project.meteor_version}"

    // Libraries
    modImplementation(include("io.github.racoondog:MeteorSharedAddonUtils:${project.msau_version}") {
        transitive = false
    })

    modImplementation(include("com.opencsv:opencsv:4.1"))
}

processResources {
    def map = [
        "version": project.version,
        "mc_version": project.minecraft_version,
        "msau_version": project.msau_version
    ]

    inputs.properties(map)
    filesMatching("fabric.mod.json") {
        expand(map)
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding("UTF-8")
}
